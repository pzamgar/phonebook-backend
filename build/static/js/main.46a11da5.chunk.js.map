{"version":3,"sources":["services/contacts.js","services/notifications.js","components/filter.js","components/personForm.js","components/contact.js","components/persons.js","components/notification.js","App.js","index.js"],"names":["baseUrl","contacts","axios","get","then","response","data","newObject","post","id","put","concat","delete","notifications","message","setNotificationMessage","setTimeout","Filter","_ref","nameFilter","setNameFilter","react_default","a","createElement","value","onChange","event","target","PersonForm","newName","newPhone","setNewName","setNewPhone","addContact","onSubmit","type","Contact","contact","deletePerson","className","name","phone","onClick","Persons","persons","setPersons","filterContacts","filter","toLocaleLowerCase","indexOf","c","map","components_contact","key","personName","find","p","window","confirm","contactServices","returnedDeleted","deletePersonPhoneBook","Notification","notificationClass","console","log","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","notificationMessage","_useState11","_useState12","setNotificationClass","useEffect","initialContacts","isExistContact","personFind","length","undefined","cleanFormsInputs","notification","personForm","preventDefault","person","personUpdate","objectSpread","returnedUpdate","notificationServices","catch","error","returnedPerson","components_persons","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.46a11da5.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n};\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject);\n  return request.then(response => response.data);\n};\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\n  return request.then(response => response.data);\n};\n\nconst deleteItem = id => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n};\n\nexport default { getAll, create, update, deleteItem };\n","const showNotification = (message, setNotificationMessage) => {\n  setNotificationMessage(message);\n  setTimeout(() => {\n    setNotificationMessage(null);\n  }, 5000);\n};\n\nexport default { showNotification };\n","import React from \"react\";\n\nconst Filter = ({nameFilter, setNameFilter}) => {\n  return (\n    <div>\n      filter shown with{\" \"}\n      <input\n        value={nameFilter}\n        onChange={event => setNameFilter(event.target.value)}\n      />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({ newName, newPhone, setNewName, setNewPhone, addContact }) => {\n  return (\n    <form onSubmit={addContact}>\n      <div>\n        name:{\" \"}\n        <input\n          value={newName}\n          onChange={event => setNewName(event.target.value)}\n        />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newPhone}\n          onChange={event => setNewPhone(event.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Contact = ({ contact, deletePerson }) => {\n  const label = \"delete\";\n\n  return (\n    <li className=\"person\">\n      {contact.name} {contact.phone}{\" \"}\n      <button onClick={deletePerson}>{label}</button>\n    </li>\n  );\n};\n\nexport default Contact;\n","import React from \"react\";\nimport Contact from \"./contact\";\n\nimport contactServices from \"../services/contacts\";\n\nconst Persons = ({ persons, setPersons, nameFilter }) => {\n  const deletePersonPhoneBook = (persons, setPersons, id) => {\n    const personName = persons.find(p => p.id === id);\n\n    if (window.confirm(`Delte ${personName.name}?`)) {\n      contactServices.deleteItem(id).then(returnedDeleted => {\n        setPersons(persons.filter(c => c.id !== id));\n      });\n    }\n  };\n\n  const showContacts = () => {\n    const list = persons\n      .filter(c => filterContacts(c, nameFilter))\n      .map(contact => (\n        <Contact\n          key={contact.id}\n          contact={contact}\n          deletePerson={() =>\n            deletePersonPhoneBook(persons, setPersons, contact.id)\n          }\n        />\n      ));\n    return list;\n  };\n\n  const filterContacts = (contact, filter) => {\n    return (\n      filter.toLocaleLowerCase() === \"\" ||\n      contact.name.toLocaleLowerCase().indexOf(filter.toLocaleLowerCase()) > -1\n    );\n  };\n\n  return <ul>{showContacts()}</ul>;\n};\n\nexport default Persons;\n","import React from \"react\";\n\nconst Notification = ({ message, notificationClass }) => {\n  console.log(notificationClass);\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={notificationClass}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport contactServices from \"./services/contacts\";\nimport notificationServices from \"./services/notifications\";\n\nimport Filter from \"./components/filter\";\nimport PersonForm from \"./components/personForm\";\nimport Persons from \"./components/persons\";\nimport Notification from \"./components/notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [notificationClass, setNotificationClass] = useState(\"notification\");\n\n  useEffect(() => {\n    contactServices.getAll().then(initialContacts => {\n      setPersons(initialContacts);\n    });\n  }, []);\n\n  const addContact = event => {\n    event.preventDefault();\n    const person = {\n      name: newName,\n      phone: newPhone,\n      id: persons.length + 1\n    };\n\n    if (isExistContact(person)) {\n      if (\n        window.confirm(\n          `${\n            person.name\n          } is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const personFind = persons.find(c => c.name === person.name);\n        const personUpdate = { ...personFind, phone: newPhone };\n        contactServices\n          .update(personFind.id, personUpdate)\n          .then(returnedUpdate => {\n            setPersons(\n              persons.map(c => (c.id !== personFind.id ? c : personUpdate))\n            );\n            cleanFormsInputs();\n            notificationServices.showNotification(\n              `Update number phone ${personUpdate.name}`,\n              setNotificationMessage\n            );\n            setNotificationClass(\"notification\");\n          })\n          .catch(error => {\n            notificationServices.showNotification(\n              `Information of ${\n                personUpdate.name\n              } has already been removed from server`,\n              setNotificationMessage\n            );\n            setNotificationClass(\"error\");\n            setPersons(persons.filter(c => c.id !== personUpdate.id));\n          });\n      }\n    } else {\n      contactServices.create(person).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        cleanFormsInputs();\n        notificationServices.showNotification(\n          `Added ${person.name}`,\n          setNotificationMessage\n        );\n        setNotificationClass(\"notification\");\n      });\n    }\n  };\n\n  const isExistContact = contact => {\n    const personFind = persons.find(c => c.name === contact.name);\n    return persons.length === 0 || personFind === undefined ? false : true;\n  };\n\n  const cleanFormsInputs = () => {\n    setNewName(\"\");\n    setNewPhone(\"\");\n    setNameFilter(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notificationMessage}\n        notificationClass={notificationClass}\n      />\n      <Filter nameFilter={nameFilter} setNameFilter={setNameFilter} />\n      <h2>Add new Contact</h2>\n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        setNewName={setNewName}\n        setNewPhone={setNewPhone}\n        addContact={addContact}\n      />\n      <h2>Numbers</h2>\n      <Persons\n        persons={persons}\n        setPersons={setPersons}\n        nameFilter={nameFilter}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}